{
  "openapi": "3.0.0",
  "info": {
      "version": "1.0.1",
      "title": "Factorial API",
      "description": "Factorial HR Public API documentation",
      "termsOfService": "https://factorialhr.es/en/tos_company",
      "contact": {
          "name": "Factorial Integrations Team"
      },
      "license": {
          "name": "MIT"
      }
  },
  "servers": [
      {
          "url": "https://api.factorialhr.com/api/v1",
          "description": "Production"
      },
      {
          "url": "https://api.demo.factorialhr.com/api/v1",
          "description": "Demo"
      }
  ],
  "security": [
      {
          "OAuth2": [
              "read",
              "write"
          ]
      }
  ],
  "paths": {
      "/me": {
          "get": {
              "tags": [
                  "User"
              ],
              "summary": "Get information about current user",
              "description": "After token grant, get information of the token holder",
              "operationId": "me",
              "responses": {
                  "200": {
                      "description": "Information on current user response",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "properties": {
                                      "email": {
                                          "type": "string",
                                          "format": "string"
                                      },
                                      "full_name": {
                                          "type": "string",
                                          "format": "string"
                                      },
                                      "first_name": {
                                          "type": "string",
                                          "format": "string"
                                      },
                                      "last_name": {
                                          "type": "string",
                                          "format": "string"
                                      },
                                      "employee_id": {
                                          "type": "integer",
                                          "format": "int64"
                                      },
                                      "role": {
                                          "type": "string",
                                          "format": "string"
                                      }
                                  }
                              }
                          }
                      }
                  }
              }
          }
      },
      "/employees": {
          "get": {
              "tags": [
                  "Employees"
              ],
              "summary": "Get employees from a company",
              "description": "Only `admins` can see all the employees' information, `regular users` will get a restricted version of the payload as a response based on the permission set by the admin",
              "operationId": "findEmployees",
              "responses": {
                  "200": {
                      "description": "Employee response",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "type": "array",
                                  "items": {
                                      "$ref": "#/components/schemas/Employee"
                                  }
                              },
                              "examples": {
                                  "Admin or Manager": {
                                      "value": [
                                          {
                                              "id": 8,
                                              "birthday_on": "1990-03-22",
                                              "manager_id": 6,
                                              "terminated_on": null,
                                              "timeoff_manager_id": 6,
                                              "regular_access_starts_on": "2021-11-22",
                                              "avatar": "https://api.factorialhr.com/ifX=--ccd4e9/edward",
                                              "identifier": "77135257L",
                                              "identifier_type": "dni",
                                              "phone_number": "93111111111",
                                              "gender": "male",
                                              "nationality": "es",
                                              "bank_number": "ES33 4413 8678 4516 5711 2933",
                                              "country": "es",
                                              "city": "Barcelona",
                                              "state": "Barcelona",
                                              "postal_code": "08007",
                                              "address_line_1": "c/ Sardenya 12,",
                                              "address_line_2": "Atic 2",
                                              "social_security_number": "093815798275",
                                              "email": "edward@factorial.co",
                                              "full_name": "Edward the Employee",
                                              "first_name": "Edward",
                                              "last_name": "the Employee",
                                              "role": "basic",
                                              "start_date": "2021-11-22",
                                              "hiring": {
                                                  "base_compensation_amount_in_cents": 2000000,
                                                  "base_compensation_type": "yearly"
                                              },
                                              "location_id": 1,
                                              "team_ids": [
                                                  3
                                              ],
                                              "company_holiday_ids": [
                                                  1,
                                                  2,
                                                  3,
                                                  4,
                                                  5
                                              ]
                                          },
                                          {
                                              "id": 9,
                                              "birthday_on": "1986-10-01",
                                              "manager_id": null,
                                              "terminated_on": null,
                                              "timeoff_manager_id": null,
                                              "regular_access_starts_on": "2021-11-22",
                                              "avatar": null,
                                              "identifier": null,
                                              "identifier_type": null,
                                              "phone_number": null,
                                              "gender": "female",
                                              "nationality": null,
                                              "bank_number": null,
                                              "country": "es",
                                              "city": null,
                                              "state": null,
                                              "postal_code": null,
                                              "address_line_1": null,
                                              "address_line_2": null,
                                              "social_security_number": null,
                                              "email": "tina@factorial.co",
                                              "full_name": "Tina The Tech Lead",
                                              "first_name": "Tina",
                                              "last_name": "The Tech Lead",
                                              "role": "basic",
                                              "start_date": "2021-11-22",
                                              "hiring": {
                                                  "base_compensation_amount_in_cents": 4200000,
                                                  "base_compensation_type": "yearly"
                                              },
                                              "location_id": 2,
                                              "team_ids": [
                                                  1,
                                                  2
                                              ],
                                              "company_holiday_ids": [
                                                  6
                                              ]
                                          }
                                      ]
                                  },
                                  "Normal Employee": {
                                      "value": [
                                          {
                                              "id": 8,
                                              "birthday_on": "1990-03-22",
                                              "manager_id": 6,
                                              "terminated_on": null,
                                              "timeoff_manager_id": 6,
                                              "regular_access_starts_on": "2021-11-22",
                                              "avatar": "https://api.factorialhr.com/YXJp0=--ccd9/edward",
                                              "identifier": null,
                                              "identifier_type": null,
                                              "phone_number": null,
                                              "gender": null,
                                              "nationality": null,
                                              "bank_number": null,
                                              "country": null,
                                              "city": null,
                                              "state": null,
                                              "postal_code": null,
                                              "address_line_1": null,
                                              "address_line_2": null,
                                              "social_security_number": null,
                                              "email": "edward@factorial.co",
                                              "full_name": "Edward the Employee",
                                              "first_name": "Edward",
                                              "last_name": "the Employee",
                                              "role": "basic",
                                              "start_date": "2021-11-22",
                                              "hiring": {
                                                  "base_compensation_amount_in_cents": null,
                                                  "base_compensation_type": null
                                              },
                                              "location_id": 1,
                                              "team_ids": [
                                                  3
                                              ],
                                              "company_holiday_ids": [
                                                  1,
                                                  2,
                                                  3,
                                                  4,
                                                  5
                                              ]
                                          },
                                          {
                                              "id": 9,
                                              "birthday_on": "1986-10-01",
                                              "manager_id": null,
                                              "terminated_on": null,
                                              "timeoff_manager_id": null,
                                              "regular_access_starts_on": "2021-11-22",
                                              "avatar": null,
                                              "identifier": null,
                                              "identifier_type": null,
                                              "phone_number": null,
                                              "gender": null,
                                              "nationality": null,
                                              "bank_number": null,
                                              "country": null,
                                              "city": null,
                                              "state": null,
                                              "postal_code": null,
                                              "address_line_1": null,
                                              "address_line_2": null,
                                              "social_security_number": null,
                                              "email": "tina@factorial.co",
                                              "full_name": "Tina The Tech Lead",
                                              "first_name": "Tina",
                                              "last_name": "The Tech Lead",
                                              "role": "basic",
                                              "start_date": "2021-11-22",
                                              "hiring": {
                                                  "base_compensation_amount_in_cents": null,
                                                  "base_compensation_type": null
                                              },
                                              "location_id": 2,
                                              "team_ids": [
                                                  1,
                                                  2
                                              ],
                                              "company_holiday_ids": [
                                                  6
                                              ]
                                          }
                                      ]
                                  }
                              }
                          }
                      }
                  },
                  "default": {
                      "description": "An Exception returned as a JSON Object. The exception is returned with one of the HTTP Status Code.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/ErrorModel"
                              },
                              "examples": {
                                  "Array String": {
                                      "value": {
                                          "errors": [
                                              "Forbidden access to a paid resource"
                                          ]
                                      }
                                  },
                                  "String": {
                                      "value": {
                                          "errors": "Resource #111 not found"
                                      }
                                  },
                                  "Null": {
                                      "value": {
                                          "errors": null
                                      }
                                  },
                                  "Object": {
                                      "value": {
                                          "errors": {
                                              "timeoff_manager_id": [
                                                  "The time off manager does not belong to the company"
                                              ],
                                              "manager_id": [
                                                  "The manager does not belong to the company"
                                              ]
                                          }
                                      }
                                  }
                              }
                          }
                      }
                  }
              }
          },
          "post": {
              "tags": [
                  "Employees"
              ],
              "summary": "Create employee",
              "description": "Create employee",
              "operationId": "createEmployee",
              "security": [
                  {
                      "OAuth2": [
                          "write"
                      ]
                  }
              ],
              "requestBody": {
                  "description": "Employee",
                  "required": true,
                  "content": {
                      "application/json": {
                          "schema": {
                              "$ref": "#/components/schemas/EmployeeInput"
                          },
                          "example": {
                              "birthday_on": "1986-10-01",
                              "regular_access_starts_on": "2021-04-20",
                              "manager_id": 3,
                              "timeoff_manager_id": 3,
                              "email": "carlos.alberto@factorial.co",
                              "first_name": "Carlos",
                              "last_name": "Alberto",
                              "role": "basic"
                          }
                      }
                  }
              },
              "responses": {
                  "201": {
                      "description": "Employee response",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/Employee"
                              },
                              "example": {
                                  "id": 16,
                                  "birthday_on": null,
                                  "manager_id": 3,
                                  "terminated_on": null,
                                  "timeoff_manager_id": 3,
                                  "regular_access_starts_on": "2021-04-20",
                                  "avatar": null,
                                  "identifier": null,
                                  "identifier_type": null,
                                  "phone_number": null,
                                  "gender": null,
                                  "nationality": null,
                                  "bank_number": null,
                                  "country": null,
                                  "city": null,
                                  "state": null,
                                  "postal_code": null,
                                  "address_line_1": null,
                                  "address_line_2": null,
                                  "social_security_number": null,
                                  "email": "carlos.alberto@factorial.co",
                                  "full_name": "Carlos Alberto",
                                  "first_name": "Carlos",
                                  "last_name": "Alberto",
                                  "role": "basic",
                                  "start_date": "2021-11-26",
                                  "hiring": {
                                      "base_compensation_amount_in_cents": null,
                                      "base_compensation_type": null
                                  },
                                  "location_id": 1,
                                  "team_ids": [],
                                  "company_holiday_ids": [
                                      1,
                                      2,
                                      3,
                                      4,
                                      5
                                  ]
                              }
                          }
                      }
                  },
                  "default": {
                      "description": "An Exception. The exception is returned with one of the HTTP Status Code",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/ErrorModel"
                              },
                              "examples": {
                                  "Array String": {
                                      "value": [
                                          "There is already a user with that email (acellam.guy+8@factorial.co)"
                                      ]
                                  },
                                  "String": {
                                      "value": {
                                          "errors": "Resource #111 not found"
                                      }
                                  },
                                  "Null": {
                                      "value": {
                                          "errors": null
                                      }
                                  },
                                  "Object": {
                                      "value": {
                                          "errors": {
                                              "timeoff_manager_id": [
                                                  "The time off manager does not belong to the company"
                                              ],
                                              "manager_id": [
                                                  "The manager does not belong to the company"
                                              ]
                                          }
                                      }
                                  }
                              }
                          }
                      }
                  }
              }
          }
      },
      "/employees/{id}": {
          "get": {
              "tags": [
                  "Employees"
              ],
              "summary": "Get employee",
              "description": "Only admins can see all the employees' information, regular users will get a restricted version of the payload as a response based on the permission set by the admin",
              "operationId": "getEmployee",
              "security": [
                  {
                      "OAuth2": [
                          "write"
                      ]
                  }
              ],
              "parameters": [
                  {
                      "name": "id",
                      "in": "path",
                      "required": true,
                      "schema": {
                          "type": "integer",
                          "format": "int64"
                      },
                      "example": 3
                  }
              ],
              "responses": {
                  "200": {
                      "description": "Employee response",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/Employee"
                              },
                              "example": {
                                  "id": 3,
                                  "birthday_on": "1990-03-22",
                                  "manager_id": 6,
                                  "terminated_on": null,
                                  "timeoff_manager_id": 6,
                                  "regular_access_starts_on": "2021-11-22",
                                  "avatar": "https://api.factorialhr.com/eyJf/edward",
                                  "identifier": null,
                                  "identifier_type": null,
                                  "phone_number": null,
                                  "gender": null,
                                  "nationality": null,
                                  "bank_number": null,
                                  "country": null,
                                  "city": null,
                                  "state": null,
                                  "postal_code": null,
                                  "address_line_1": null,
                                  "address_line_2": null,
                                  "social_security_number": null,
                                  "email": "edward@factorial.co",
                                  "full_name": "Edward the Employee",
                                  "first_name": "Edward",
                                  "last_name": "the Employee",
                                  "role": "basic",
                                  "start_date": "2021-11-22",
                                  "hiring": {
                                      "base_compensation_amount_in_cents": null,
                                      "base_compensation_type": null
                                  },
                                  "location_id": 1,
                                  "team_ids": [
                                      3
                                  ],
                                  "company_holiday_ids": [
                                      1,
                                      2,
                                      3,
                                      4,
                                      5
                                  ]
                              }
                          }
                      }
                  },
                  "default": {
                      "description": "An Exception returned as a JSON Object. The exception is returned with one of the HTTP Status Code.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/ErrorModel"
                              },
                              "examples": {
                                  "Array String": {
                                      "value": [
                                          "Forbidden access to a paid resource"
                                      ]
                                  },
                                  "String": {
                                      "value": {
                                          "errors": "Resource #38392 not found"
                                      }
                                  },
                                  "Null": {
                                      "value": {
                                          "errors": null
                                      }
                                  }
                              }
                          }
                      }
                  }
              }
          },
          "put": {
              "tags": [
                  "Employees"
              ],
              "summary": "Update employee",
              "description": "Update employee",
              "operationId": "updateEmployee",
              "security": [
                  {
                      "OAuth2": [
                          "write"
                      ]
                  }
              ],
              "parameters": [
                  {
                      "name": "id",
                      "in": "path",
                      "required": true,
                      "schema": {
                          "type": "integer",
                          "format": "int64"
                      }
                  }
              ],
              "requestBody": {
                  "description": "Employee",
                  "content": {
                      "application/json": {
                          "schema": {
                              "$ref": "#/components/schemas/EmployeeUpdateInput"
                          }
                      }
                  }
              },
              "responses": {
                  "200": {
                      "description": "Employee response",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/Employee"
                              }
                          }
                      }
                  },
                  "default": {
                      "description": "Exception",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/ErrorModel"
                              }
                          }
                      }
                  }
              }
          }
      },
      "/employees/{id}/terminate": {
          "post": {
              "tags": [
                  "Employees"
              ],
              "summary": "Terminate employee",
              "description": "Terminate employee",
              "operationId": "terminateEmployee",
              "security": [
                  {
                      "OAuth2": [
                          "write"
                      ]
                  }
              ],
              "parameters": [
                  {
                      "name": "id",
                      "in": "path",
                      "required": true,
                      "schema": {
                          "type": "integer"
                      }
                  }
              ],
              "requestBody": {
                  "description": "Employee",
                  "required": true,
                  "content": {
                      "application/json": {
                          "schema": {
                              "$ref": "#/components/schemas/TerminationInput"
                          }
                      }
                  }
              },
              "responses": {
                  "200": {
                      "description": "Employee response",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/Employee"
                              }
                          }
                      }
                  },
                  "default": {
                      "description": "Exception",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/ErrorModel"
                              }
                          }
                      }
                  }
              }
          }
      },
      "/employees/{id}/unterminate": {
          "post": {
              "tags": [
                  "Employees"
              ],
              "summary": "Unterminate employee",
              "description": "Unterminate employee",
              "operationId": "unterminateEmployee",
              "security": [
                  {
                      "OAuth2": [
                          "write"
                      ]
                  }
              ],
              "parameters": [
                  {
                      "name": "id",
                      "in": "path",
                      "required": true,
                      "schema": {
                          "type": "integer"
                      }
                  }
              ],
              "responses": {
                  "200": {
                      "description": "Employee response",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/Employee"
                              }
                          }
                      }
                  },
                  "default": {
                      "description": "Exception",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/ErrorModel"
                              }
                          }
                      }
                  }
              }
          }
      },
      "/leave_types": {
          "get": {
              "tags": [
                  "Leave"
              ],
              "summary": "Get leave types from a company",
              "description": "Get leave types from a company",
              "operationId": "findLeaveTypes",
              "security": [
                  {
                      "OAuth2": [
                          "read"
                      ]
                  }
              ],
              "responses": {
                  "200": {
                      "description": "LeaveType response",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "type": "array",
                                  "items": {
                                      "$ref": "#/components/schemas/LeaveType"
                                  }
                              }
                          }
                      }
                  },
                  "default": {
                      "description": "Exception",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/ErrorModel"
                              }
                          }
                      }
                  }
              }
          },
          "post": {
              "tags": [
                  "Leave"
              ],
              "summary": "Create leave type",
              "description": "Create leave type",
              "operationId": "createLeaveType",
              "security": [
                  {
                      "OAuth2": [
                          "write"
                      ]
                  }
              ],
              "requestBody": {
                  "required": true,
                  "content": {
                      "application/json": {
                          "schema": {
                              "$ref": "#/components/schemas/LeaveTypeInput"
                          }
                      }
                  }
              },
              "responses": {
                  "201": {
                      "description": "LeaveType response",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/LeaveType"
                              }
                          }
                      }
                  },
                  "default": {
                      "description": "Exception",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/ErrorModel"
                              }
                          }
                      }
                  }
              }
          }
      },
      "/leave_types/{id}": {
          "put": {
              "tags": [
                  "Leave"
              ],
              "summary": "Update leave type",
              "description": "Update leave type",
              "operationId": "updateLeaveType",
              "security": [
                  {
                      "OAuth2": [
                          "write"
                      ]
                  }
              ],
              "parameters": [
                  {
                      "name": "id",
                      "in": "path",
                      "required": true,
                      "schema": {
                          "type": "integer"
                      }
                  }
              ],
              "requestBody": {
                  "required": true,
                  "content": {
                      "application/json": {
                          "schema": {
                              "$ref": "#/components/schemas/LeaveTypeUpdateInput"
                          }
                      }
                  }
              },
              "responses": {
                  "200": {
                      "description": "LeaveType response",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/LeaveType"
                              }
                          }
                      }
                  },
                  "default": {
                      "description": "Exception",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/ErrorModel"
                              }
                          }
                      }
                  }
              }
          }
      },
      "/leaves": {
          "get": {
              "tags": [
                  "Leave"
              ],
              "summary": "Get leaves from a company",
              "description": "Get leaves from a company",
              "operationId": "findLeaves",
              "security": [
                  {
                      "OAuth2": [
                          "read"
                      ]
                  }
              ],
              "responses": {
                  "200": {
                      "description": "Leave response",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "type": "array",
                                  "items": {
                                      "$ref": "#/components/schemas/Leave"
                                  }
                              }
                          }
                      }
                  },
                  "default": {
                      "description": "Exception",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/ErrorModel"
                              }
                          }
                      }
                  }
              }
          },
          "post": {
              "tags": [
                  "Leave"
              ],
              "summary": "Create leave",
              "description": "Create leave",
              "operationId": "createLeave",
              "security": [
                  {
                      "OAuth2": [
                          "write"
                      ]
                  }
              ],
              "requestBody": {
                  "required": true,
                  "content": {
                      "application/json": {
                          "schema": {
                              "$ref": "#/components/schemas/LeaveInput"
                          }
                      }
                  }
              },
              "responses": {
                  "201": {
                      "description": "Leave response",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/Leave"
                              }
                          }
                      }
                  },
                  "default": {
                      "description": "Exception",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/ErrorModel"
                              }
                          }
                      }
                  }
              }
          }
      },
      "/leaves/{id}": {
          "put": {
              "tags": [
                  "Leave"
              ],
              "summary": "Update leave",
              "description": "Update leave",
              "operationId": "updateLeave",
              "security": [
                  {
                      "OAuth2": [
                          "write"
                      ]
                  }
              ],
              "parameters": [
                  {
                      "name": "id",
                      "in": "path",
                      "required": true,
                      "schema": {
                          "type": "integer"
                      }
                  }
              ],
              "requestBody": {
                  "required": true,
                  "content": {
                      "application/json": {
                          "schema": {
                              "$ref": "#/components/schemas/LeaveUpdateInput"
                          }
                      }
                  }
              },
              "responses": {
                  "200": {
                      "description": "Leave response",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/Leave"
                              }
                          }
                      }
                  },
                  "default": {
                      "description": "Exception",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/ErrorModel"
                              }
                          }
                      }
                  }
              }
          },
          "delete": {
              "tags": [
                  "Leave"
              ],
              "summary": "Delete leave",
              "description": "Delete leave",
              "operationId": "deleteLeave",
              "security": [
                  {
                      "OAuth2": [
                          "write"
                      ]
                  }
              ],
              "parameters": [
                  {
                      "name": "id",
                      "in": "path",
                      "required": true,
                      "schema": {
                          "type": "integer"
                      }
                  }
              ],
              "responses": {
                  "204": {
                      "description": "No content"
                  },
                  "default": {
                      "description": "Exception",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/ErrorModel"
                              }
                          }
                      }
                  }
              }
          }
      },
      "/payslips": {
          "get": {
              "tags": [
                  "Payments"
              ],
              "summary": "Get payslips from a company",
              "description": "Get payslips from a company",
              "operationId": "finsPayslips",
              "deprecated": true,
              "parameters": [
                  {
                      "name": "employee_id",
                      "in": "query",
                      "schema": {
                          "type": "integer"
                      }
                  },
                  {
                      "name": "status",
                      "in": "query",
                      "schema": {
                          "type": "string"
                      }
                  },
                  {
                      "name": "month",
                      "in": "query",
                      "schema": {
                          "type": "integer"
                      }
                  },
                  {
                      "name": "year",
                      "in": "query",
                      "schema": {
                          "type": "integer"
                      }
                  },
                  {
                      "name": "from",
                      "in": "query",
                      "schema": {
                          "$ref": "#/components/schemas/FromInput"
                      }
                  }
              ],
              "security": [
                  {
                      "OAuth2": [
                          "read"
                      ]
                  }
              ],
              "responses": {
                  "200": {
                      "description": "Payslip response",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "type": "array",
                                  "items": {
                                      "$ref": "#/components/schemas/Payslip"
                                  }
                              }
                          }
                      }
                  },
                  "402": {
                      "description": "This company doesn't have payroll enabled",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/ErrorModel"
                              }
                          }
                      }
                  },
                  "default": {
                      "description": "Exception",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/ErrorModel"
                              }
                          }
                      }
                  }
              }
          }
      },
      "/shifts": {
          "get": {
              "tags": [
                  "Attendance"
              ],
              "summary": "Get shifts from a company",
              "description": "Get shifts from a company. `admin` users will get shifts from all employees. `regular users` will get a restricted version of the payload as a response based on the permission set by the admin",
              "operationId": "findShifts",
              "security": [
                  {
                      "OAuth2": [
                          "read"
                      ]
                  }
              ],
              "parameters": [
                  {
                      "name": "year",
                      "in": "query",
                      "schema": {
                          "type": "integer"
                      },
                      "example": 2021,
                      "description": "It should be valid year in the format `YYYY`"
                  },
                  {
                      "name": "month",
                      "in": "query",
                      "schema": {
                          "type": "integer"
                      },
                      "example": 7,
                      "description": "It should be valid month in the calendar ranging rom `01 to 12`. The month format is `MM`"
                  }
              ],
              "responses": {
                  "200": {
                      "description": "Shift response",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "type": "array",
                                  "items": {
                                      "$ref": "#/components/schemas/Shift"
                                  }
                              }
                          }
                      }
                  },
                  "default": {
                      "description": "Exception",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/ErrorModel"
                              }
                          }
                      }
                  }
              }
          }
      },
      "/shifts/clock_in": {
          "post": {
              "tags": [
                  "Attendance"
              ],
              "summary": "Clock in",
              "description": "Creates a shift for the current user with the clock_in time of the request and nil clock_out",
              "operationId": "clockIn",
              "security": [
                  {
                      "OAuth2": [
                          "write"
                      ]
                  }
              ],
              "requestBody": {
                  "required": true,
                  "content": {
                      "application/json": {
                          "schema": {
                              "required": [
                                  "now",
                                  "employee_id"
                              ],
                              "properties": {
                                  "now": {
                                      "type": "string",
                                      "example": "2019-01-01T12:12:01-02:00",
                                      "description": "Date and time in ISO8601 format"
                                  },
                                  "employee_id": {
                                      "type": "integer",
                                      "example": "1"
                                  }
                              }
                          }
                      }
                  }
              },
              "responses": {
                  "200": {
                      "description": "Shift response",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/Shift"
                              },
                              "example": {
                                  "id": 3,
                                  "day": 7,
                                  "month": 12,
                                  "year": 2021,
                                  "clock_in": "08:00",
                                  "clock_out": null,
                                  "employee_id": 5,
                                  "observations": null
                              }
                          }
                      }
                  },
                  "default": {
                      "description": "Exception",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/ErrorModel"
                              }
                          }
                      }
                  }
              }
          }
      },
      "/shifts/clock_out": {
          "post": {
              "tags": [
                  "Attendance"
              ],
              "summary": "Clock out",
              "description": "Updates a shift for the current user with the clock_out time of the request. It will fail if the user wasn't previously clocked in.",
              "operationId": "clockOut",
              "security": [
                  {
                      "OAuth2": [
                          "write"
                      ]
                  }
              ],
              "requestBody": {
                  "required": true,
                  "content": {
                      "application/json": {
                          "schema": {
                              "required": [
                                  "now",
                                  "employee_id"
                              ],
                              "properties": {
                                  "now": {
                                      "type": "string",
                                      "example": "2019-01-01T12:12:01-02:00",
                                      "description": "Date and time in ISO8601 format"
                                  },
                                  "employee_id": {
                                      "type": "integer",
                                      "example": "1"
                                  }
                              }
                          }
                      }
                  }
              },
              "responses": {
                  "200": {
                      "description": "Shift response",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/Shift"
                              },
                              "example": {
                                  "id": 5,
                                  "day": 9,
                                  "month": 12,
                                  "year": 2021,
                                  "clock_in": "07:37",
                                  "clock_out": "10:00",
                                  "employee_id": 5,
                                  "observations": null
                              }
                          }
                      }
                  },
                  "default": {
                      "description": "Exception",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/ErrorModel"
                              }
                          }
                      }
                  }
              }
          }
      },
      "/shifts/{id}": {
          "put": {
              "tags": [
                  "Attendance"
              ],
              "summary": "Update shift",
              "description": "Update shift",
              "operationId": "updateShift",
              "security": [
                  {
                      "OAuth2": [
                          "write"
                      ]
                  }
              ],
              "parameters": [
                  {
                      "name": "id",
                      "in": "path",
                      "required": true,
                      "schema": {
                          "type": "integer"
                      },
                      "example": 13
                  }
              ],
              "requestBody": {
                  "required": true,
                  "content": {
                      "application/json": {
                          "schema": {
                              "$ref": "#/components/schemas/ShiftInput"
                          },
                          "example": {
                              "clock_in": "12:30",
                              "clock_out": "14:00",
                              "observations": "Looks like it rained on him"
                          }
                      }
                  }
              },
              "responses": {
                  "200": {
                      "description": "Shift response",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/Shift"
                              },
                              "example": {
                                  "id": 13,
                                  "day": 9,
                                  "month": 12,
                                  "year": 2021,
                                  "clock_in": "12:30",
                                  "clock_out": "14:00",
                                  "employee_id": 5,
                                  "observations": "Looks like it rained on him"
                              }
                          }
                      }
                  },
                  "default": {
                      "description": "Exception",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/ErrorModel"
                              }
                          }
                      }
                  }
              }
          },
          "delete": {
              "tags": [
                  "Attendance"
              ],
              "summary": "Delete shift",
              "description": "Delete shift",
              "operationId": "deleteShift",
              "security": [
                  {
                      "OAuth2": [
                          "write"
                      ]
                  }
              ],
              "parameters": [
                  {
                      "name": "id",
                      "in": "path",
                      "required": true,
                      "schema": {
                          "type": "integer"
                      }
                  }
              ],
              "responses": {
                  "204": {
                      "description": "No content"
                  },
                  "default": {
                      "description": "Exception",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/ErrorModel"
                              }
                          }
                      }
                  }
              }
          }
      },
      "/webhooks": {
          "get": {
              "tags": [
                  "Webhooks"
              ],
              "summary": "Get list of Webhooks",
              "description": "Get a list of all subscribed webhooks for current user.",
              "operationId": "getWebhooks",
              "security": [
                  {
                      "OAuth2": [
                          "read"
                      ]
                  }
              ],
              "responses": {
                  "200": {
                      "description": "Webhooks response",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "type": "array",
                                  "items": {
                                      "$ref": "#/components/schemas/WebhooksSubscription"
                                  }
                              }
                          }
                      }
                  },
                  "default": {
                      "description": "Exception",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/ErrorModel"
                              }
                          }
                      }
                  }
              }
          },
          "post": {
              "tags": [
                  "Webhooks"
              ],
              "summary": "Create Webhook",
              "description": "Creates a subscription for a determined webhook type. If webhook already exists, it just changes the target_url.",
              "operationId": "createWebhook",
              "security": [
                  {
                      "OAuth2": [
                          "write"
                      ]
                  }
              ],
              "requestBody": {
                  "required": true,
                  "content": {
                      "application/json": {
                          "schema": {
                              "required": [
                                  "type",
                                  "target_url"
                              ],
                              "properties": {
                                  "type": {
                                      "type": "string",
                                      "example": "employee_invited",
                                      "description": "Type of subscription you want to subscribe. See schema for possible values.",
                                      "enum": [
                                          "employee_invited",
                                          "employee_terminated",
                                          "employee_unterminated",
                                          "employee_created",
                                          "attendance_clockin",
                                          "ats_application_created",
                                          "ats_application_updated",
                                          "ats_job_posting_created",
                                          "ats_job_posting_updated",
                                          "ats_job_posting_deleted"
                                      ]
                                  },
                                  "target_url": {
                                      "type": "string",
                                      "example": "https://yourcoolcompany.com/my_webhook_subscription",
                                      "description": "Url where we will point with a POST request when the action subscribed is triggered."
                                  }
                              }
                          }
                      }
                  }
              },
              "responses": {
                  "200": {
                      "description": "Webhook response",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/WebhooksSubscription"
                              }
                          }
                      }
                  },
                  "default": {
                      "description": "Exception",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/ErrorModel"
                              }
                          }
                      }
                  }
              }
          },
          "delete": {
              "tags": [
                  "Webhooks"
              ],
              "summary": "Delete Webhook",
              "description": "Deletes a subscription to a webhook. We won't need the webhook id, but its `type`",
              "operationId": "deleteWebhook",
              "security": [
                  {
                      "OAuth2": [
                          "write"
                      ]
                  }
              ],
              "requestBody": {
                  "required": true,
                  "content": {
                      "application/json": {
                          "schema": {
                              "required": [
                                  "type"
                              ],
                              "properties": {
                                  "type": {
                                      "type": "string",
                                      "example": "employee_invited",
                                      "description": "Type of subscription you want to delete."
                                  }
                              }
                          }
                      }
                  }
              },
              "responses": {
                  "200": {
                      "description": "Webhook response",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/WebhooksSubscription"
                              }
                          }
                      }
                  },
                  "default": {
                      "description": "Exception",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/ErrorModel"
                              }
                          }
                      }
                  }
              }
          }
      },
      "/locations": {
          "get": {
              "tags": [
                  "Location"
              ],
              "summary": "Get all locations",
              "description": "Get all locations",
              "operationId": "getLocations",
              "responses": {
                  "200": {
                      "description": "Locations response",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "type": "array",
                                  "items": {
                                      "$ref": "#/components/schemas/Location"
                                  }
                              }
                          }
                      }
                  },
                  "default": {
                      "description": "Exception",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/ErrorModel"
                              }
                          }
                      }
                  }
              }
          }
      },
      "/locations/{id}": {
          "get": {
              "tags": [
                  "Location"
              ],
              "summary": "Get location by ID",
              "description": "Get location by ID",
              "operationId": "getLocationById",
              "parameters": [
                  {
                      "name": "id",
                      "in": "path",
                      "required": true,
                      "schema": {
                          "type": "integer",
                          "format": "int64"
                      }
                  }
              ],
              "responses": {
                  "200": {
                      "description": "Location response",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/Location"
                              }
                          }
                      }
                  },
                  "default": {
                      "description": "Exception",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/ErrorModel"
                              }
                          }
                      }
                  }
              }
          }
      },
       "/teams": {
           "get": {
               "tags": [
                   "Teams"
               ],
               "summary": "Get all teams",
               "description": "Teams are group employees who perform similar tasks together. Teams can have team leaders.Team leaders can see their members' information and manage their time off",
              "operationId": "getTeams",
              "responses": {
                  "200": {
                      "description": "Teams response",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "type": "array",
                                  "items": {
                                      "$ref": "#/components/schemas/Team"
                                  },
                                  "example": [
                                      {
                                          "id": 1,
                                          "name": "Management",
                                          "employee_ids": [
                                              5,
                                              6,
                                              9
                                          ],
                                          "lead_ids": [
                                              5
                                          ]
                                      },
                                      {
                                          "id": 2,
                                          "name": "Development",
                                          "employee_ids": [
                                              9,
                                              10
                                          ],
                                          "lead_ids": [
                                              9
                                          ]
                                      },
                                      {
                                          "id": 3,
                                          "name": "Marketing",
                                          "employee_ids": [
                                              6,
                                              7,
                                              8
                                          ],
                                          "lead_ids": [
                                              6
                                          ]
                                      }
                                  ]
                              }
                          }
                      }
                  },
                  "default": {
                      "description": "Exception",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/ErrorModel"
                              }
                          }
                      }
                  }
              }
          },
          "post": {
                "tags": [
                    "Teams"
                ],
                "summary": "Create a team",
                "description": "Create a team",
                "operationId": "createTeam",
                "security": [
                    {
                        "OAuth2": [
                            "write"
                        ]
                    }
                ],
                "requestBody": {
                    "description": "Name",
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/TeamInput"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "The created team",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Team"
                                }
                            }
                        }
                    },
                 "default": {
                        "description": "Exception",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorModel"
                                }
                            }
                        }
                    }
            }
        }
      },
       "/teams/{id}": {
           "get": {
               "tags": [
                   "Teams"
               ],
               "summary": "Get team by ID",
               "description": "Get team by ID",
              "operationId": "getTeamById",
              "parameters": [
                  {
                      "name": "id",
                      "in": "path",
                      "required": true,
                      "schema": {
                          "type": "integer",
                          "format": "int64"
                      },
                      "example": 1
                  }
              ],
              "responses": {
                  "200": {
                      "description": "Team response",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/Team"
                              },
                              "example": {
                                  "id": 1,
                                  "name": "Management",
                                  "employee_ids": [
                                      5,
                                      6,
                                      9
                                  ],
                                  "lead_ids": [
                                      5
                                  ]
                              }
                          }
                      }
                  },
                  "default": {
                      "description": "Exception",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/ErrorModel"
                              }
                          }
                      }
                  }
              }
          },
          "put": {
                "tags": [
                    "Teams"
                ],
                "summary": "Update a team",
                "description": "Update a team",
                "operationId": "updateTeam",
                "security": [
                    {
                        "OAuth2": [
                            "write"
                        ]
                    }
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Name",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TeamInput"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "The updated team",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Team"
                                }
                            }
                        }
                    },
                 "default": {
                        "description": "Exception",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorModel"
                                }
                            }
                        }
                    }
                }
          },
            "delete": {
                "tags": [
                    "Teams"
                ],
                "summary": "Delete team",
                "description": "Delete team",
                "operationId": "deleteTeam",
                "security": [
                    {
                        "OAuth2": [
                            "write"
                        ]
                    }
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Team response"
                    },
                    "default": {
                        "description": "Exception",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorModel"
                                }
                            }
                        }
                    }
                }
            }
        },
      "/company_holidays": {
          "get": {
              "tags": [
                  "Holidays"
              ],
              "summary": "Get all company holidays",
              "description": "Get all company holidays",
              "operationId": "getCompanyHolidays",
              "responses": {
                  "200": {
                      "description": "CompanyHolidays response",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "type": "array",
                                  "items": {
                                      "$ref": "#/components/schemas/CompanyHoliday"
                                  }
                              }
                          }
                      }
                  },
                  "default": {
                      "description": "Exception",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/ErrorModel"
                              }
                          }
                      }
                  }
              }
          }
      },
      "/company_holidays/{id}": {
          "get": {
              "tags": [
                  "Holidays"
              ],
              "summary": "Get company holiday by ID",
              "description": "Get company holiday by ID",
              "operationId": "getCompanyHolidayById",
              "parameters": [
                  {
                      "name": "id",
                      "in": "path",
                      "required": true,
                      "schema": {
                          "type": "integer",
                          "format": "int64"
                      }
                  }
              ],
              "responses": {
                  "200": {
                      "description": "CompanyHoliday response",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/CompanyHoliday"
                              }
                          }
                      }
                  },
                  "default": {
                      "description": "Exception",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/ErrorModel"
                              }
                          }
                      }
                  }
              }
          }
      },
      "/documents": {
          "get": {
              "tags": [
                  "Files"
              ],
              "summary": "Get a collection of documents",
              "description": "Get a collection of documents",
              "operationId": "findDocuments",
              "parameters": [
                  {
                      "name": "employee_id",
                      "in": "query",
                      "description": "Filter all documents by the employee_id",
                      "required": false,
                      "schema": {
                          "type": "integer",
                          "format": "int64"
                      }
                  },
                  {
                      "name": "folder_id",
                      "in": "query",
                      "description": "Filter all documents by folder_id",
                      "required": false,
                      "schema": {
                          "type": "integer",
                          "format": "int64"
                      }
                  }
              ],
              "responses": {
                  "200": {
                      "description": "Collection of documents",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "type": "array",
                                  "items": {
                                      "$ref": "#/components/schemas/Document"
                                  }
                              }
                          }
                      }
                  }
              }
          },
          "post": {
              "tags": [
                  "Files"
              ],
              "summary": "Create a document",
              "description": "Create a document",
              "operationId": "createDocument",
              "security": [
                  {
                      "OAuth2": [
                          "write"
                      ]
                  }
              ],
              "requestBody": {
                  "description": "Document",
                  "required": true,
                  "content": {
                      "multipart/form-data": {
                          "schema": {
                              "$ref": "#/components/schemas/DocumentInput"
                          }
                      }
                  }
              },
              "responses": {
                  "201": {
                      "description": "The created document",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/Document"
                              }
                          }
                      }
                  }
              }
          }
      },
      "/documents/{id}": {
          "get": {
              "tags": [
                  "Files"
              ],
              "summary": "Fetch a document",
              "description": "Fetch a document",
              "operationId": "fetchDocument",
              "parameters": [
                  {
                      "name": "id",
                      "in": "path",
                      "description": "ID of the document to fetch",
                      "required": true,
                      "schema": {
                          "type": "integer",
                          "format": "int64"
                      }
                  }
              ],
              "responses": {
                  "200": {
                      "description": "documents",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/Document"
                              }
                          }
                      }
                  }
              }
          },
          "put": {
              "tags": [
                  "Files"
              ],
              "description": "Update a document",
              "summary": "Update a document",
              "operationId": "updateDocument",
              "parameters": [
                  {
                      "name": "id",
                      "in": "path",
                      "required": true,
                      "schema": {
                          "type": "integer",
                          "format": "int64"
                      }
                  }
              ],
              "requestBody": {
                  "description": "Document",
                  "required": true,
                  "content": {
                      "application/json": {
                          "schema": {
                              "$ref": "#/components/schemas/DocumentInputUpdate"
                          }
                      }
                  }
              },
              "responses": {
                  "200": {
                      "description": "The updated document",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/Document"
                              }
                          }
                      }
                  }
              }
          },
          "delete": {
              "tags": [
                  "Files"
              ],
              "summary": "Delete a document",
              "description": "Delete a document",
              "parameters": [
                  {
                      "name": "id",
                      "in": "path",
                      "required": true,
                      "schema": {
                          "type": "integer",
                          "format": "int64"
                      }
                  }
              ],
              "responses": {
                  "204": {
                      "description": "No content"
                  }
              }
          }
      },
      "/folders": {
          "get": {
              "tags": [
                  "Files"
              ],
              "summary": "Get a collection of folders",
              "description": "Get a collection of folders",
              "operationId": "findFolders",
              "parameters": [
                  {
                      "name": "name",
                      "description": "filter folders by name",
                      "schema": {
                          "type": "string"
                      },
                      "required": false,
                      "in": "query"
                  },
                  {
                      "name": "active",
                      "description": "filter folders by active",
                      "schema": {
                          "format": "boolean",
                          "type": "boolean",
                          "enum": [
                              "true",
                              "false"
                          ]
                      },
                      "in": "query"
                  }
              ],
              "responses": {
                  "200": {
                      "description": "Collection of folders",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "type": "array",
                                  "items": {
                                      "$ref": "#/components/schemas/Folder"
                                  }
                              }
                          }
                      }
                  }
              }
          },
          "post": {
              "tags": [
                  "Files"
              ],
              "summary": "Create a folder",
              "description": "Create a folder",
              "operationId": "createFolder",
              "security": [
                  {
                      "OAuth2": [
                          "write"
                      ]
                  }
              ],
              "requestBody": {
                  "description": "Folder",
                  "required": true,
                  "content": {
                      "application/json": {
                          "schema": {
                              "$ref": "#/components/schemas/FolderInput"
                          }
                      }
                  }
              },
              "responses": {
                  "201": {
                      "description": "The created folder",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/Folder"
                              }
                          }
                      }
                  }
              }
          }
      },
      "/folders/{id}": {
          "get": {
              "tags": [
                  "Files"
              ],
              "summary": "Fetch a folder",
              "description": "Fetch a folder",
              "operationId": "fetchFolder",
              "parameters": [
                  {
                      "name": "id",
                      "in": "path",
                      "required": true,
                      "schema": {
                          "type": "integer",
                          "format": "int64"
                      }
                  }
              ],
              "responses": {
                  "200": {
                      "description": "The folder",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/Folder"
                              }
                          }
                      }
                  }
              }
          },
          "put": {
              "tags": [
                  "Files"
              ],
              "summary": "Update a folder",
              "description": "Update a folder",
              "operationId": "updateFolder",
              "security": [
                  {
                      "OAuth2": [
                          "write"
                      ]
                  }
              ],
              "parameters": [
                  {
                      "name": "id",
                      "in": "path",
                      "required": true,
                      "schema": {
                          "type": "integer",
                          "format": "int64"
                      }
                  }
              ],
              "requestBody": {
                  "description": "Folder",
                  "required": true,
                  "content": {
                      "application/json": {
                          "schema": {
                              "$ref": "#/components/schemas/FolderInput"
                          }
                      }
                  }
              },
              "responses": {
                  "200": {
                      "description": "The updated folder",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/Folder"
                              }
                          }
                      }
                  }
              }
          }
      },
      "/custom_fields": {
          "get": {
              "tags": [
                  "Additional Information"
              ],
              "summary": "Get a collection of custom fields",
              "description": "This endpoint allows you to fetch a collection of custom fields. The fields you receive in the response are governed by the `field_group` you supply in the body of your request.\n\nFor now, there are 2 acceptable field groups:\n\n*   `employees-questions` which refers to fields relating to an employee\n    \n\n*   `time-tracking-projects` which refers to fields relating to time tracking data",
              "operationId": "Getacollectionofcustomfields",
              "parameters": [
                  {
                      "name": "field_group",
                      "in": "query",
                      "description": "(Required) Available options: <br />employees-questions (Employee's fields)<br />time-tracking-projects (Shift's project)",
                      "required": true,
                      "style": "form",
                      "explode": true,
                      "schema": {
                          "type": "string",
                          "example": "proident Duis dolore"
                      }
                  }
              ],
              "responses": {
                  "200": {
                      "description": "OK",
                      "headers": {},
                      "content": {
                          "application/json": {
                              "schema": {
                                  "type": "array",
                                  "items": {
                                      "$ref": "#/components/schemas/CustomField"
                                  },
                                  "description": "",
                                  "example": [
                                      {
                                          "id": -7504756,
                                          "label": "sit eiusmod pariatur",
                                          "position": 90773647,
                                          "required": false,
                                          "field_type": "dolore irure",
                                          "min_value": -439653,
                                          "max_value": 47114499,
                                          "choice_options": [
                                              "d",
                                              "ut est"
                                          ]
                                      },
                                      {
                                          "id": 59171211,
                                          "label": "ipsum tempor Ex",
                                          "position": -12726256,
                                          "required": true,
                                          "field_type": "ex",
                                          "min_value": -74117090,
                                          "max_value": 70332911,
                                          "choice_options": [
                                              "voluptate aliquip",
                                              "irure do sunt labore"
                                          ]
                                      }
                                  ]
                              },
                              "example": [
                                  {
                                      "id": -7504756,
                                      "label": "sit eiusmod pariatur",
                                      "position": 90773647,
                                      "required": false,
                                      "field_type": "dolore irure",
                                      "min_value": -439653,
                                      "max_value": 47114499,
                                      "choice_options": [
                                          "d",
                                          "ut est"
                                      ]
                                  },
                                  {
                                      "id": 59171211,
                                      "label": "ipsum tempor Ex",
                                      "position": -12726256,
                                      "required": true,
                                      "field_type": "ex",
                                      "min_value": -74117090,
                                      "max_value": 70332911,
                                      "choice_options": [
                                          "voluptate aliquip",
                                          "irure do sunt labore"
                                      ]
                                  }
                              ]
                          }
                      }
                  }
              }
          }
      },
      "/custom_fields/values": {
          "get": {
              "tags": [
                  "Additional Information"
              ],
              "summary": "Given a custom field, get the value for a specific instance.",
              "description": "Given a custom field, get the value for a specific instance.",
              "operationId": "findCustomValue",
              "parameters": [
                  {
                      "name": "field_id",
                      "schema": {
                          "type": "string"
                      },
                      "required": true,
                      "in": "query"
                  },
                  {
                      "name": "instance_id",
                      "description": "Id of the model instance associated to the field <br />E.g Employee ID",
                      "schema": {
                          "type": "integer"
                      },
                      "required": true,
                      "in": "query"
                  }
              ],
              "responses": {
                  "200": {
                      "description": "Custom value",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "type": "array",
                                  "items": {
                                      "$ref": "#/components/schemas/CustomValue"
                                  }
                              }
                          }
                      }
                  }
              }
          },
          "post": {
              "tags": [
                  "Additional Information"
              ],
              "summary": "Create a value for a custom field",
              "description": "As described, a `Custom Field Value` can be thought of as an answer/response to a `Custom Field` these answers/responses belong to the entity that inputed the values e.g. an employee who answered the t-shirt size question by filling it out in their factorial dashboard.\n\nThis endpoint allows you to create values for custom fields. It requires an `instance_id` which refers to the `id` of the entity that owns this `Custom Value` e.g. an Employee for which the `employee_id` will correspond to the `instance_id`. It also requires an `field_id` to reference the `Custom Field` which this value is related to.\n\nYou can think of `Custom Fields` and `Custom Values` as questions and answers.",
              "operationId": "Createavalueforacustomfield",
              "parameters": [
                  {
                      "name": "field_id",
                      "in": "query",
                      "description": "The `id` of the field this value belongs to",
                      "required": true,
                      "style": "form",
                      "explode": true,
                      "schema": {
                          "type": "integer",
                          "format": "int32",
                          "example": 5
                      }
                  },
                  {
                      "name": "instance_id",
                      "in": "query",
                      "description": "The `id` of the entity that \"created\" this value e.g. an employee who fills out the answer to a question",
                      "required": true,
                      "style": "form",
                      "explode": true,
                      "schema": {
                          "type": "integer",
                          "format": "int32",
                          "example": 6
                      }
                  }
              ],
              "requestBody": {
                  "content": {
                      "application/x-www-form-urlencoded": {
                          "encoding": {},
                          "schema": {
                              "required": [
                                  "value"
                              ],
                              "type": "object",
                              "properties": {
                                  "value": {
                                      "type": "string",
                                      "example": "somelinktomyportfolio.com"
                                  }
                              }
                          }
                      }
                  }
              },
              "responses": {
                  "200": {
                      "description": "Custom value",
                      "content": {
                          "application/json; charset=utf-8": {
                              "schema": {
                                  "$ref": "#/components/schemas/CustomValue"
                              },
                              "example": {
                                  "id": 2,
                                  "label": "Link to your portfolio",
                                  "value": "somelinktomyportfolio.com",
                                  "field_id": 5,
                                  "required": false,
                                  "instance_id": 6
                              }
                          }
                      }
                  }
              }
          }
      },
      "/contract_versions": {
          "get": {
              "tags": [
                  "Contract"
              ],
              "summary": "Get contract versions",
              "description": "Get contract versions by different filters",
              "operationId": "getContractVersions",
              "parameters": [
                  const :ids, T.nilable(T::Array[Integer])
        const :employee_ids, T.nilable(T::Array[Integer])
        const :date, T.nilable(Date)
        const :ends_on_gt, T.nilable(Date)
        const :ends_on_lteq, T.nilable(Date)
        const :starts_on_lteq, T.nilable(Date)
        const :forfait_jours, T::Boolean, default: false
                  {
                      "name": "ids",
                      "schema": {
                          "type": "Integer"
                      },
                      "required": false,
                      "in": "query"
                  },
                  {
                      "name": "employee_ids",
                      "schema": {
                          "type": "integer"
                      },
                      "required": false,
                      "in": "query"
                  },
                  {
                      "name": "date",
                      "schema": {
                          "type": "date"
                      },
                      "required": false,
                      "in": "query"
                  }
              ],
              "responses": {
                  "200": {
                      "description": "Contract Versions",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "type": "array",
                                  "items": {
                                      "$ref": "#/components/schemas/ContractVersions"
                                  }
                              }
                          }
                      }
                  }
              }
          },
      }
  },
  "components": {
      "schemas": {
          "Employee": {
              "required": [
                  "email",
                  "first_name",
                  "last_name"
              ],
              "properties": {
                  "id": {
                      "type": "integer",
                      "format": "int64"
                  },
                  "birthday_on": {
                      "type": "string",
                      "format": "date"
                  },
                  "start_date": {
                      "type": "string",
                      "format": "date"
                  },
                  "regular_access_starts_on": {
                      "type": "string",
                      "format": "date"
                  },
                  "email": {
                      "type": "string",
                      "format": "string"
                  },
                  "full_name": {
                      "type": "string",
                      "format": "string"
                  },
                  "first_name": {
                      "type": "string",
                      "format": "string"
                  },
                  "last_name": {
                      "type": "string",
                      "format": "string"
                  },
                  "manager_id": {
                      "type": "integer",
                      "format": "int64"
                  },
                  "role": {
                      "type": "string",
                      "format": "string"
                  },
                  "timeoff_manager_id": {
                      "type": "integer",
                      "format": "int64"
                  },
                  "terminated_on": {
                      "type": "string",
                      "format": "date"
                  },
                  "phone_number": {
                      "type": "string",
                      "format": "string"
                  },
                  "gender": {
                      "type": "string",
                      "format": "string",
                      "enum": [
                          "male",
                          "female"
                      ]
                  },
                  "nationality": {
                      "type": "string",
                      "format": "string"
                  },
                  "bank_number": {
                      "type": "string",
                      "format": "string"
                  },
                  "country": {
                      "type": "string",
                      "format": "string"
                  },
                  "city": {
                      "type": "string",
                      "format": "string"
                  },
                  "state": {
                      "type": "string",
                      "format": "string"
                  },
                  "postal_code": {
                      "type": "string",
                      "format": "string"
                  },
                  "address_line_1": {
                      "type": "string",
                      "format": "string"
                  },
                  "address_line_2": {
                      "type": "string",
                      "format": "string"
                  },
                  "social_security_number": {
                      "type": "string",
                      "format": "string"
                  },
                  "company_holidays_ids": {
                      "type": "array",
                      "items": {
                          "type": "integer",
                          "format": "int64"
                      }
                  },
                  "identifier": {
                      "type": "string",
                      "format": "string",
                      "description": "National identification number"
                  },
                  "identifier_type": {
                      "type": "string",
                      "format": "string",
                      "description": "Type of national identification. Possible value: DNI, NIE, Passport"
                  },
                  "hiring": {
                      "type": "object",
                      "properties": {
                          "base_compensation_amount_in_cents": {
                              "type": "integer",
                              "format": "int64"
                          },
                          "base_compensation_type": {
                              "type": "string",
                              "format": "string",
                              "description": "Compensation recurrence. Possible values: hourly, monthly, yearly."
                          }
                      }
                  },
                  "location_id": {
                      "type": "integer",
                      "format": "int64"
                  },
                  "team_ids": {
                      "type": "array",
                      "items": {
                          "type": "integer",
                          "format": "int64"
                      }
                  },
                  "avatar": {
                      "type": "string",
                      "format": "string",
                      "description": "The link (URL) of the picture of the user"
                  }
              }
          },
          "EmployeeInput": {
              "required": [
                  "email",
                  "first_name",
                  "last_name"
              ],
              "properties": {
                  "birthday_on": {
                      "type": "string",
                      "format": "date",
                      "description": "The date when the employee was born.It should always be in the past"
                  },
                  "start_date": {
                      "type": "string",
                      "format": "date",
                      "default": "today",
                      "deprecated": true,
                      "description": "The date when the employee started employment"
                  },
                  "regular_access_starts_on": {
                      "description": "The date as of wich the employee has full access to Factorial. Must be >= today. This is related to Welcome Space.",
                      "type": "string",
                      "format": "date",
                      "default": "YYYY-MM-DD"
                  },
                  "email": {
                      "type": "string",
                      "format": "string"
                  },
                  "first_name": {
                      "type": "string",
                      "format": "string"
                  },
                  "last_name": {
                      "type": "string",
                      "format": "string"
                  },
                  "manager_id": {
                      "type": "integer",
                      "format": "int64",
                      "description": "The employee `id` who is a manager of the selected employee"
                  },
                  "role": {
                      "type": "string",
                      "format": "string",
                      "enum": [
                          "admin",
                          "basic"
                      ]
                  },
                  "timeoff_manager_id": {
                      "type": "integer",
                      "format": "int64",
                      "description": "The employee `id` who is a manager of the selected employee"
                  },
                  "terminated_on": {
                      "type": "string",
                      "format": "date",
                      "deprecated": true,
                      "description": "The date when the employee stopped employment. It can not be in the past"
                  },
                  "termination_reason": {
                      "type": "string",
                      "format": "string",
                      "deprecated": true,
                      "description": "A message describing why the employee was terminated"
                  }
              }
          },
          "EmployeeUpdateInput": {
              "properties": {
                  "birthday_on": {
                      "type": "string",
                      "format": "date",
                      "description": "The date when the employee was born.It should always be in the past"
                  },
                  "first_name": {
                      "type": "string",
                      "format": "string"
                  },
                  "last_name": {
                      "type": "string",
                      "format": "string"
                  },
                  "manager_id": {
                      "type": "integer",
                      "format": "int64",
                      "description": "The employee `id` who is a manager of the selected employee"
                  },
                  "role": {
                      "type": "string",
                      "format": "string",
                      "enum": [
                          "admin",
                          "basic"
                      ]
                  },
                  "timeoff_manager_id": {
                      "type": "integer",
                      "format": "int64",
                      "description": "The employee `id` who is a manager of the selected employee"
                  }
              }
          },
          "TerminationInput": {
              "properties": {
                  "terminated_on": {
                      "type": "string",
                      "format": "date",
                      "description": "The date when the employee stopped employment. It can not be in the past"
                  },
                  "termination_reason": {
                      "type": "string",
                      "format": "string",
                      "description": "A message describing why the employee was terminated"
                  }
              }
          },
          "LeaveType": {
              "properties": {
                  "id": {
                      "type": "integer",
                      "format": "int64"
                  },
                  "accrues": {
                      "type": "boolean",
                      "format": "boolean",
                      "default": false,
                      "description": "Whether leaves with this type accrue holidays"
                  },
                  "active": {
                      "type": "boolean",
                      "format": "boolean",
                      "default": true,
                      "description": "Whether leaves whit this type can be created"
                  },
                  "approval_required": {
                      "type": "boolean",
                      "format": "boolean",
                      "default": false,
                      "description": "Whether leaves with this type require approval from timeoff managers"
                  },
                  "attachment": {
                      "type": "boolean",
                      "format": "boolean",
                      "default": false,
                      "description": "Whether leaves with this type accept attachments"
                  },
                  "color": {
                      "type": "string",
                      "format": "string",
                      "example": "FFFFFF",
                      "description": "Identifying color of this leave type"
                  },
                  "identifier": {
                      "type": "string",
                      "format": "string",
                      "description": "Slug identifying the type of leave type. Only \"custom\" leave types can be created or modified via the API"
                  },
                  "name": {
                      "type": "string",
                      "format": "string"
                  },
                  "visibility": {
                      "type": "boolean",
                      "format": "boolean",
                      "default": false,
                      "description": "Whether this leave type is visibile to regular employees"
                  },
                  "workable": {
                      "type": "boolean",
                      "format": "boolean",
                      "default": false,
                      "description": "Whether leaves with this type count as working days"
                  }
              }
          },
          "LeaveTypeUpdateInput": {
              "properties": {
                  "accrues": {
                      "type": "boolean",
                      "format": "boolean",
                      "default": false,
                      "description": "Whether leaves with this type accrue holidays"
                  },
                  "active": {
                      "type": "boolean",
                      "format": "boolean",
                      "default": true,
                      "description": "Whether leaves whit this type can be created"
                  },
                  "approval_required": {
                      "type": "boolean",
                      "format": "boolean",
                      "default": false,
                      "description": "Whether leaves with this type require approvel from timeoff managers"
                  },
                  "attachment": {
                      "type": "boolean",
                      "format": "boolean",
                      "default": false,
                      "description": "Whether leaves with this type accept attachments"
                  },
                  "color": {
                      "type": "string",
                      "format": "string",
                      "example": "FFFFFF",
                      "description": "Identifying color of this leave type"
                  },
                  "name": {
                      "type": "string",
                      "format": "string"
                  },
                  "visibility": {
                      "type": "boolean",
                      "format": "boolean",
                      "default": false,
                      "description": "Whether this leave type is visibile to regular employees"
                  },
                  "workable": {
                      "type": "boolean",
                      "format": "boolean",
                      "default": false,
                      "description": "Whether leaves with this type count as working days"
                  }
              }
          },
          "LeaveTypeInput": {
              "required": [
                  "name",
                  "color"
              ],
              "properties": {
                  "accrues": {
                      "type": "boolean",
                      "format": "boolean",
                      "default": false,
                      "description": "Whether leaves with this type accrue holidays"
                  },
                  "active": {
                      "type": "boolean",
                      "format": "boolean",
                      "default": true,
                      "description": "Whether leaves whit this type can be created"
                  },
                  "approval_required": {
                      "type": "boolean",
                      "format": "boolean",
                      "default": false,
                      "description": "Whether leaves with this type require approvel from timeoff managers"
                  },
                  "attachment": {
                      "type": "boolean",
                      "format": "boolean",
                      "default": false,
                      "description": "Whether leaves with this type accept attachments"
                  },
                  "color": {
                      "type": "string",
                      "format": "string",
                      "example": "FFFFFF",
                      "description": "Identifying color of this leave type"
                  },
                  "name": {
                      "type": "string",
                      "format": "string"
                  },
                  "visibility": {
                      "type": "boolean",
                      "format": "boolean",
                      "default": false,
                      "description": "Whether this leave type is visibile to regular employees"
                  },
                  "workable": {
                      "type": "boolean",
                      "format": "boolean",
                      "default": false,
                      "description": "Whether leaves with this type count as working days"
                  }
              }
          },
          "Leave": {
              "properties": {
                  "id": {
                      "type": "integer",
                      "format": "int64"
                  },
                  "approved": {
                      "type": "boolean"
                  },
                  "description": {
                      "type": "string",
                      "format": "string"
                  },
                  "employee_id": {
                      "type": "integer",
                      "format": "int64"
                  },
                  "finish_on": {
                      "type": "string",
                      "format": "date"
                  },
                  "half_day": {
                      "type": "string",
                      "format": "string"
                  },
                  "leave_type_id": {
                      "type": "integer",
                      "format": "int64"
                  },
                  "start_on": {
                      "type": "string",
                      "format": "date"
                  },
                  "employee_full_name": {
                      "type": "string",
                      "format": "string"
                  },
                  "leave_type_name": {
                      "type": "string",
                      "format": "string"
                  }
              }
          },
          "LeaveInput": {
              "required": [
                  "start_on",
                  "finish_on",
                  "employee_id",
                  "leave_type_id"
              ],
              "properties": {
                  "description": {
                      "type": "string",
                      "format": "string"
                  },
                  "employee_id": {
                      "type": "integer",
                      "format": "int64"
                  },
                  "finish_on": {
                      "type": "string",
                      "format": "date"
                  },
                  "half_day": {
                      "type": "string",
                      "format": "string"
                  },
                  "leave_type_id": {
                      "type": "integer",
                      "format": "int64"
                  },
                  "start_on": {
                      "type": "string",
                      "format": "date"
                  }
              }
          },
          "LeaveUpdateInput": {
              "properties": {
                  "description": {
                      "type": "string",
                      "format": "string"
                  },
                  "employee_id": {
                      "type": "integer",
                      "format": "int64"
                  },
                  "finish_on": {
                      "type": "string",
                      "format": "date"
                  },
                  "half_day": {
                      "type": "string",
                      "format": "string"
                  },
                  "leave_type_id": {
                      "type": "integer",
                      "format": "int64"
                  },
                  "start_on": {
                      "type": "string",
                      "format": "date"
                  }
              }
          },
          "Payslip": {
              "properties": {
                  "id": {
                      "type": "integer",
                      "format": "int64"
                  },
                  "base_cotization_in_cents": {
                      "type": "integer",
                      "format": "int64"
                  },
                  "base_irpf_in_cents": {
                      "type": "integer",
                      "format": "int64"
                  },
                  "gross_salary_in_cents": {
                      "type": "integer",
                      "format": "int64"
                  },
                  "net_salary_in_cents": {
                      "type": "integer",
                      "format": "int64"
                  },
                  "irpf_in_cents": {
                      "type": "integer",
                      "format": "int64"
                  },
                  "irpf_percentage": {
                      "type": "integer",
                      "format": "int64"
                  },
                  "is_last_payslip": {
                      "type": "boolean"
                  },
                  "start_date": {
                      "type": "string",
                      "format": "date"
                  },
                  "end_date": {
                      "type": "string",
                      "format": "date"
                  },
                  "employee_id": {
                      "type": "integer",
                      "format": "int64"
                  },
                  "status": {
                      "type": "string"
                  }
              }
          },
          "FromInput": {
              "required": [
                  "month",
                  "year"
              ],
              "properties": {
                  "month": {
                      "type": "integer"
                  },
                  "year": {
                      "type": "integer"
                  }
              }
          },
          "Shift": {
              "properties": {
                  "id": {
                      "type": "integer",
                      "format": "int64"
                  },
                  "day": {
                      "type": "integer",
                      "format": "int64"
                  },
                  "month": {
                      "type": "integer",
                      "format": "int64"
                  },
                  "year": {
                      "type": "integer",
                      "format": "int64"
                  },
                  "clock_in": {
                      "type": "string",
                      "format": "string",
                      "example": "09:00"
                  },
                  "clock_out": {
                      "type": "string",
                      "format": "string",
                      "example": "17:00"
                  },
                  "employee_id": {
                      "type": "integer",
                      "format": "int64"
                  },
                  "observations": {
                      "type": "string",
                      "format": "string"
                  }
              }
          },
          "ShiftInput": {
              "properties": {
                  "clock_in": {
                      "type": "string",
                      "example": "2019-01-01T12:12:01-02:00",
                      "description": "Date and time in ISO8601 format"
                  },
                  "clock_out": {
                      "type": "string",
                      "example": "2019-01-01T12:12:01-02:00",
                      "description": "Date and time in ISO8601 format"
                  },
                  "observations": {
                      "type": "string",
                      "format": "string"
                  }
              }
          },
          "WebhooksSubscription": {
              "properties": {
                  "type": {
                      "type": "string",
                      "format": "string",
                      "example": "employee_invited"
                  }
              }
          },
          "Location": {
              "properties": {
                  "id": {
                      "type": "integer",
                      "format": "int64"
                  },
                  "name": {
                      "type": "string",
                      "format": "string"
                  },
                  "country": {
                      "type": "string",
                      "format": "string",
                      "description": "Country code. E.g. 'es'"
                  },
                  "phone_number": {
                      "type": "string",
                      "format": "string"
                  },
                  "state": {
                      "type": "string",
                      "format": "string",
                      "description": "State/province code. E.g. 'ct'"
                  },
                  "city": {
                      "type": "string",
                      "format": "string",
                      "description": "City name. E.g. 'barcelona'"
                  },
                  "address_line_1": {
                      "type": "string",
                      "format": "string"
                  },
                  "address_line_2": {
                      "type": "string",
                      "format": "string"
                  },
                  "postal_code": {
                      "type": "string",
                      "format": "string"
                  },
                  "timezone": {
                      "type": "string",
                      "format": "string"
                  },
                  "company_holidays_ids": {
                      "type": "array",
                      "items": {
                          "type": "integer",
                          "format": "int64"
                      }
                  }
              }
          },
          "Team": {
              "properties": {
                  "id": {
                      "type": "integer",
                      "format": "int64"
                  },
                  "name": {
                      "type": "string",
                      "format": "string"
                  },
                  "employee_ids": {
                      "type": "array",
                      "items": {
                          "type": "integer",
                          "format": "int64"
                      }
                  },
                  "lead_ids": {
                      "type": "array",
                      "description": "Ids of team leads.",
                      "items": {
                          "type": "integer",
                          "format": "int64"
                      }
                  }
              }
          },
          "CompanyHoliday": {
              "properties": {
                  "id": {
                      "type": "integer",
                      "format": "int64"
                  },
                  "summary": {
                      "type": "string",
                      "format": "string"
                  },
                  "description": {
                      "type": "string",
                      "format": "string"
                  },
                  "date": {
                      "type": "string",
                      "format": "date"
                  },
                  "half_day": {
                      "type": "string",
                      "format": "string"
                  },
                  "location_id": {
                      "type": "integer",
                      "format": "int64"
                  }
              }
          },
          "Document": {
              "properties": {
                  "id": {
                      "type": "integer"
                  },
                  "employee_id": {
                      "type": "integer"
                  },
                  "company_id": {
                      "type": "integer"
                  },
                  "folder_id": {
                      "type": "integer"
                  },
                  "file": {
                      "type": "string"
                  },
                  "filename": {
                      "type": "string"
                  },
                  "public": {
                      "type": "boolean"
                  },
                  "created_at": {
                      "type": "string",
                      "format": "date"
                  },
                  "updated_at": {
                      "type": "string",
                      "format": "date"
                  }
              }
          },
          "DocumentInput": {
              "required": [
                  "public",
                  "file",
                  "filename"
              ],
              "properties": {
                  "public": {
                      "type": "boolean",
                      "description": "is the file public?"
                  },
                  "employee_id": {
                      "type": "integer",
                      "description": "assign document to an employee"
                  },
                  "file": {
                      "type": "string",
                      "format": "binary",
                      "description": "the actual file"
                  },
                  "filename": {
                      "type": "string",
                      "description": "filename of the document"
                  },
                  "folder_id": {
                      "type": "integer",
                      "description": "folder to include the document in"
                  },
                  "request_esignature": {
                      "description": "request e-signature for this document",
                      "type": "boolean"
                  },
                  "signees": {
                      "type": "array",
                      "description": "array of access ids that have to sign the document (only valid if request_esignature is present)",
                      "items": {
                          "type": "integer"
                      }
                  }
              }
          },
          "DocumentInputUpdate": {
              "required": [
                  "public"
              ],
              "properties": {
                  "public": {
                      "type": "boolean",
                      "description": "is the file public?"
                  },
                  "employee_id": {
                      "type": "integer",
                      "description": "assign document to an employee"
                  },
                  "folder_id": {
                      "type": "integer",
                      "description": "folder to include the document in"
                  },
                  "request_esignature": {
                      "description": "request e-signature for this document",
                      "type": "boolean"
                  },
                  "signees": {
                      "type": "array",
                      "description": "array of access ids that have to sign the document (only valid if request_esignature is present)",
                      "items": {
                          "type": "integer"
                      }
                  }
              }
          },
          "Folder": {
              "properties": {
                  "id": {
                      "type": "integer"
                  },
                  "company_id": {
                      "type": "integer"
                  },
                  "name": {
                      "type": "string",
                      "description": "name of the folder"
                  },
                  "type": {
                      "type": "string",
                      "description": "type of the folder, you can only create custom folders"
                  },
                  "active": {
                      "type": "boolean"
                  },
                  "created_at": {
                      "type": "string",
                      "format": "date"
                  },
                  "updated_at": {
                      "type": "string",
                      "format": "date"
                  }
              }
          },
          "FolderInput": {
              "required": [
                  "name"
              ],
              "properties": {
                  "name": {
                      "type": "string",
                      "description": "Name of the folder"
                  },
                  "active": {
                      "type": "boolean",
                      "description": "Is the folder active?"
                  }
              }
          },
          "CustomField": {
              "properties": {
                  "id": {
                      "type": "integer"
                  },
                  "label": {
                      "type": "string"
                  },
                  "position": {
                      "type": "integer"
                  },
                  "required": {
                      "type": "boolean"
                  },
                  "field_type": {
                      "type": "string"
                  },
                  "min_value": {
                      "type": "integer",
                      "description": "Just for rating type fields"
                  },
                  "max_value": {
                      "type": "integer",
                      "description": "Just for rating type fields"
                  },
                  "choice_options": {
                      "type": "array",
                      "description": "Just for choice type fields",
                      "items": {
                          "type": "string"
                      }
                  }
              }
          },
          "CustomValue": {
              "properties": {
                  "id": {
                      "type": "integer"
                  },
                  "label": {
                      "type": "string"
                  },
                  "value": {
                      "type": "string"
                  },
                  "field_id": {
                      "type": "integer"
                  },
                  "required": {
                      "type": "boolean"
                  },
                  "instance_id": {
                      "type": "integer"
                  }
              }
          },
          "ErrorModel": {
              "properties": {
                  "errors": {
                      "oneOf": [
                          {
                              "type": "array",
                              "items": {
                                  "type": "string"
                              }
                          },
                          {
                              "type": "string",
                              "nullable": true
                          },
                          {
                              "type": "object",
                              "properties": {
                                  "ENTITY_FIELD": {
                                      "type": "array",
                                      "items": {
                                          "type": "string"
                                      }
                                  }
                              },
                              "description": "The ENTITY_FIELD comes from the property of the data being accessed for example from employee it can email or first_name or..."
                          }
                      ]
                  }
              },
              "description": "The Error is a JSON Object and so arrays, strings, objects, integers, etc can be contained in it"
          }
      },
      "examples": {},
      "links": {},
      "parameters": {},
      "requestBodies": {},
      "responses": {},
      "securitySchemes": {
          "OAuth2": {
              "type": "oauth2",
              "flows": {
                  "authorizationCode": {
                      "authorizationUrl": "https://api.factorialhr.com/oauth/authorize",
                      "tokenUrl": "https://api.factorialhr.com/oauth/token",
                      "scopes": {
                          "read": "Grants read access",
                          "write": "Grants write access"
                      }
                  }
              }
          }
      }
  }
}